[project]
name = "ml-practice"
version = "0.1.0"
description = "Add your description here"
authors = [
    { name = "William Keating", email = "54231777+keatingw@users.noreply.github.com" },
]
dependencies = ["py_algos", "rs_algos", "ml_api"]
readme = "README.md"
requires-python = ">=3.11"

[dependency-groups]
dev = [
    "pip>=24.1.2",
    "ipython>=8.26.0",
    "ruff>=0.5.2",
    "mypy>=1.10.1",
    "pytest>=8.3.2",
    "httpx>=0.27.2",
]

[tool.uv.sources]
py_algos = { workspace = true }
rs_algos = { workspace = true }
ml_api = { workspace = true }

[tool.uv.workspace]
members = ["packages/py_algos", "packages/rs_algos", "packages/ml_api"]

[tool.ruff]
target-version = "py312"
fix = true                                                  # autofix on (only for fixable list)
show-fixes = true                                           # show fixes made
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["py_algos", "rs_algos", "ml_api"]

[tool.ruff.lint]
pydocstyle.convention = "google"
select = ["ALL"]
ignore = [
    "E501",    # ignore line length
    "PD013",   # allow stack as well as melt
    "PD901",   # allow 'df' dataframe naming
    "PD010",   # allow pandas .pivot method
    "PD009",   # `iat` is allowed
    "PD011",   # allow `.values` methods given false positives
    "B023",    # allow loops to set new variables
    "B905",    # allow non-specific zip strictness
    "PLR2004", # allow literals in comparisons
    "D105",    # don't force docstrings on magic methods
    "D107",    # don't force docstrings on init
    "FIX002",  # allow TODO
    "RUF012",  # ignore mutable classvar
    "RUF013",  # implicit optional handled by mypy strict
    "COM812",  # allow no trailing comma
    "TD003",   # no issue links on todos
    "G004",    # allow fstring logging
    "SLF001",  # allow private access so lxml doesn't complain
    "ANN101",  # allow no type hint on self
    "ANN102",  # allow no type hint on cls
    "ANN401",  # allow Any on kwargs
    "ISC001",  # conflict with formatter
    "CPY001",  # allow no copyright notices
]
fixable = [
    "I001", # autofix for isort
]

[tool.ruff.lint.per-file-ignores]
"**/tests/*.py" = ["S101", "INP001", "D104"]

[tool.mypy]
strict = true
disallow_any_unimported = true
